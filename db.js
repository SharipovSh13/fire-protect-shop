
// // db.js
// require('dotenv').config();
// const express = require('express');
// const cors = require('cors');
// const pool = require('./db');

// const app = express();                  

// app.use(cors());
// app.use(express.json());

// // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
// app.get('/', (req, res) => {
//   res.send('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω FLAME.TJ üî•');
// });

// import { Pool } from 'pg';

// const pool = new Pool({
//   connectionString: process.env.DATABASE_URL,
//   ssl: { rejectUnauthorized: false }
// });

// export default pool;

// // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –±–∞–∑—ã
// app.get('/products', async (req, res) => {
//   try {
//     const result = await pool.query('SELECT * FROM products');
//     res.json(result.rows);
//   } catch (err) {
//     console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', err);
//     res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
//   }
// });

// // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑—É
// app.post('/products', async (req, res) => {
//   const { name, price } = req.body;

//   if (!name || !price) {
//     return res.status(400).json({ error: '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞' });
//   }

//   try {
//     const result = await pool.query(
//       'INSERT INTO products (name, price) VALUES ($1, $2) RETURNING *',
//       [name, price]
//     );
//     res.status(201).json(result.rows[0]);
//   } catch (err) {
//     console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', err);
//     res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
//   }
// });

// // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
// const port = process.env.PORT || 3005;
// app.listen(port, () => {
//   console.log(`üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ http://localhost:${port}`);
// });

// const { Pool } = require('pg');
// require('dotenv').config();

// const pool = new Pool({
//   user: process.env.DB_USER,
//   host: process.env.DB_HOST,
//   database: process.env.DB_NAME,
//   password: process.env.DB_PASSWORD,
//   port: Number(process.env.DB_PORT), // –ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
// });

// pool.connect()
//   .then(() => console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ'))
//   .catch(err => console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err.stack));

// // üî• –í–ê–ñ–ù–û: —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º client
// module.exports = pool;

const getProducts = async () => {
  try {
    const res = await client.query('SELECT * FROM products');
    console.log('üì¶ –í—Å–µ —Ç–æ–≤–∞—Ä—ã:');
    console.table(res.rows);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ç–æ–≤–∞—Ä–æ–≤:', err.stack);
  } finally {
    client.end();
  }
};



getProducts();



// db.js
require('dotenv').config();
const { Pool } = require('pg');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false, // –≤–∞–∂–Ω–æ –¥–ª—è Render PostgreSQL
  },
});

pool.connect()
  .then(() => console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ'))
  .catch((err) => console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:', err.stack));

module.exports = pool;
